---
title: "Lab 3: COVID-19"
subtitle: "Ecosystem Science and Sustainability 330"
author: 
  - name: Noah Goodhart
    email: noahwg@rams.colostate.edu
format: html
editor: visual
self-contained: TRUE
---

Question 1: How does easy access to historical and real-time environmental data shape our understanding of climate trends, resource management, and public health? What happens when this data disappears or becomes inaccessible?

Answer: Easy access to historical and real-time environmental data enhances climate models, informs conservation efforts, and supports early warning systems for disasters and disease outbreaks. When this data becomes inaccessible, it weakens scientific research, hampers policy decisions, and leaves communities more vulnerable to environmental risks.

Question 2:


Libraries

```{r}
library(tidyverse)
library(flextable)
library(zoo)
library(dplyr)
library(readr)
library(stringr)
```

This is the url I am getting the data from.
```{r}
covid <- read.csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv")
```

Creating new objects.
```{r}
my.date <- as.Date("2022-02-01")

my.state <- "Colorado"
```

Here I made a new subset that limits the data to Colorado, plus adding 2 new columns, one for daily new cases, and daily new deaths.
```{r}
colorado_covid <- covid %>%
  filter(state == "Colorado") %>%  
  group_by(county) %>% 
  arrange(date, .by_group = TRUE) %>% 
  mutate(
    new_cases = cases - lag(cases, default = 0), 
    new_deaths = deaths - lag(deaths, default = 0) 
  ) %>%
  ungroup()
```

Using this code, I generated 2 tables. One with the 5 counties with the most cumulative cases, and the second one with the 5 most new cases. Below are the two tables for question 2.
```{r}
top_cumulative_cases <- colorado_covid %>%
  filter(date == my.date) %>%
  arrange(desc(cases)) %>%
  select(county, cases) %>%
  head(5)

top_new_cases <- colorado_covid %>%
  filter(date == my.date) %>%
  arrange(desc(new_cases)) %>%
  select(county, new_cases) %>%
  head(5)

top_cumulative_cases %>% flextable()
top_new_cases %>% flextable()

```
Question 3:

Here I added a 0 to the fips column and changed it to uppercase FIPS so it will match the population data's FIPS column. 
```{r}
colorado_covid <- colorado_covid %>%
  mutate(fips = str_pad(fips, width = 5, side = "left", pad = "0")) %>% 
  rename(FIPS = fips)
```

In this next step I am cleaning up population data, creating a 5 digit FIP variable, keeping only columns that have "2021" in their name.
```{r}
library(here)
population_data <- read.csv(here("data", "co-est2023-alldata.csv"))

population_clean <- population_data %>%
  mutate(
    STATE = str_pad(as.character(STATE), width = 2, side = "left", pad = "0"),
    COUNTY = str_pad(as.character(COUNTY), width = 3, side = "left", pad = "0"),
    FIPS = paste0(STATE, COUNTY)
  ) %>%
  select(FIPS, contains("NAME"), contains("2021")) %>%
  filter(substr(FIPS, 3, 5) != "000") 

```

Question 3.2:
The clean data now has a total of 19 columns, all with 2021 data. The columns range from estimates of population, change in population, births & deaths, migration statistics, to rates of change of the previous columns. The death columns are most likely impacted by the COVID pandemic, but the data in the population csv doesn't show COVID deaths compared to all others. 

Question 3.3:
The populations range from a population estimate, international migration, domestic migration, to net migration.

Question 3.4
Here I joined the two data frames by FIPS, then created new columns for Per Capita: cumulative cases, new cases, and new deaths.
```{r}
colorado_covid <- colorado_covid %>%
  left_join(population_clean, by = "FIPS")

colorado_covid <- colorado_covid %>% 
  mutate(
    per_capita_cumulative_cases = cases / POPESTIMATE2021,
    per_capita_new_cases = new_cases / POPESTIMATE2021,
    per_capita_new_deaths = new_deaths / POPESTIMATE2021
  )

```

Question 3.5

The first step is creating a new data frame just for Janurary 1st, 2021.
```{r}
covid_jan_1_2021 <- colorado_covid %>%
  filter(date == "2021-01-01")
```

The next step is creating a table with the top five counties with the most per capita cumulative cases with the data I calculated in the previous step.
```{r}
table_1 <- covid_jan_1_2021 %>%
  arrange(desc(per_capita_cumulative_cases)) %>%
  head(5) %>%
  select(county, per_capita_cumulative_cases) %>%
  flextable() %>%
  set_caption("Top 5 Colorado Counties with the most Cumulative Cases per Capita on 2021-01-01")

```

Then I will do the same for per capita new cases
```{r}
table_2 <- covid_jan_1_2021 %>% 
  arrange(desc(per_capita_new_cases)) %>% 
  head(5) %>% 
  select(county, per_capita_new_cases) %>% 
  flextable() %>% 
  set_caption("Top 5 Colorado Counties with the most New Cases per Capita on 2021-01-01")
```

Now we just need to view the tables
```{r}
table_1
table_2
```

